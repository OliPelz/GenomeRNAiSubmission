import de.dkfz.signaling.AdditionalColumn
import de.dkfz.signaling.ContributorExperiment
import de.dkfz.signaling.DataRow

class BootStrap {

    def init = { servletContext ->

    ContributorExperiment contributorExperiment = new ContributorExperiment(
            assay: "Sindbis virus (SINV) GFP protein expression",
            assayMethod:"Fluorescence" ,
            authors:"Panda et al." ,
            bioSource:"Cell line" ,
            notes: "Primary screen performed in duplicate. Z-scores from replicate B and from secondary validation screen are shown in the comment field. Recombinant SINV (HRsp) expressing GFP was used for infection.",
            publicationTitle: "Genome-wide RNAi Screen Identifies SEC61A and VCP as Conserved Regulators of Sindbis Virus Entry",
            publicationYear: 2014 ,
            pubmedId: 24332855,
            reagentType: "dsRNA",
            scope: "Genome-wide",
            scoreCutoff: "< -2 OR > 2",
            scoreType: "Z-score",
            screenTitle: "Sindbis virus (SINV) infection",
            screenType: "Cell-based",
            stableId: "",
            orgId: 2,
            notesToTheCurator: ""
    ).addToDataRows(new DataRow(
            plate: 1,
            position: 1,
            well: "A1",
            score: 2.12,
            wellAnno: "sample",
            finalWellAnno: "sample",
            rawR1Ch1: 213,
            rawR2Ch1: 4534,
            rawR1Ch2: 43242,
            rawR2Ch2: 242,
            activityR1Ch1: 34.5,
            activityR2Ch1: 534.5,
            activityR1Ch2: 342.7,
            activityR2Ch2: 42.5,
            normalizedR1: 6434.6,
            normalizedR2: 645323.66,
            reagentName: "DSG-XX",
            image: "",
            primaryGeneID: "123",
            phenotype: "deadly",
            reagentId: 1234,
            library: "Amxibon ",
            libraryProvider: "The Company",
            bioModel: "DL2"
    ).addToAdditionalColumns())
    .addToDataRows(new DataRow(
            plate: 1,
            position: 3,
            well: "C3",
            score: -1.31,
            wellAnno: "sample",
            finalWellAnno: "sample",
            rawR1Ch1: 213,
            rawR2Ch1: 4534,
            rawR1Ch2: 43242,
            rawR2Ch2: 242,
            activityR1Ch1: 34.5,
            activityR2Ch1: 534.5,
            activityR1Ch2: 342.7,
            activityR2Ch2: 42.5,
            normalizedR1: 6434.6,
            normalizedR2: 645323.66,
            reagentName: "DSG-YY",
            image: "",
            primaryGeneID: "345",
            phenotype: "deadly",
            reagentId: 2345,
            library: "Amxibon ",
            libraryProvider: "The Company",
            bioModel: "DL2"
    ))
    .addToDataRows(new DataRow(
            plate: 5,
            position: 12,
            well: "D6",
            score: 1.311,
            wellAnno: "sample",
            finalWellAnno: "sample",
            rawR1Ch1: 213,
            rawR2Ch1: 4534,
            rawR1Ch2: 43242,
            rawR2Ch2: 242,
            activityR1Ch1: 34.5,
            activityR2Ch1: 534.5,
            activityR1Ch2: 342.7,
            activityR2Ch2: 42.5,
            normalizedR1: 6434.6,
            normalizedR2: 645323.66,
            reagentName: "DSG-XX",
            image: "",
            primaryGeneID: "123",
            phenotype: "deadly",
            reagentId: 1234,
            library: "Amxibon ",
            libraryProvider: "The Company",
            bioModel: "DL2"
    ))
    .save(failOnError : true)


    }
    def destroy = {
    }
}
